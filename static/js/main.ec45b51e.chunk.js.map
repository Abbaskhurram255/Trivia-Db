{"version":3,"sources":["assets/sounds/joker.wav","assets/sounds/gameStarted.wav","assets/sounds/coin.wav","assets/sounds/gameFinished.wav","assets/Images/404.jpg","StyledApp.js","components/Header/StyledHeader.js","components/Header/Header.js","components/Questions/StyledQuestions.js","components/Questions/Questions.js","components/HomePage/StyledHomePage.js","components/HomePage/HomePage.js","components/QuizSummary/StyledQuizSummary.js","components/QuizSummary/QuizSummary.js","components/UI/ErrorPage/StyledError.js","components/UI/ErrorPage/ErrorPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","StyledApp","styled","div","Rotate","keyframes","StyledHeader","header","Header","icon","faAmericanSignLanguageInterpreting","faCrosshairs","StyledQuestions","section","remainedTime","Answer1Animation","Answer2Animation","Answer3Animation","Answer4Animation","Answers","li","isSelected","Question","ques","nextQuestion","prevQuestion","selectAnswerHandler","finishQuiz","deleteTwoWrongAnswersHandler","wrongAnswersDeleted","hintHandler","hintCount","correctAnswerHandler","correctAnswerSelected","sound","history","currentQuestion","isTimeFinished","window","performance","navigation","type","push","location","reload","autoPlay","src","gameStarted","jokerUsed","className","onClick","category","includes","split","difficulty","toUpperCase","slice","id","disabled","answers","length","faPooStorm","faLightbulb","faClipboardCheck","question","replace","map","ans","key","answer","StyledHomePage","main","SelectAnimation","CategorySelect","button","categoryNum","css","DifficultySelect","difficultyLevel","HomePage","inputSubmitHandler","inputChangeHandler","name","quizStartCountDown","categorySelectHandler","difficultySelectHandler","storedName","renameHandler","isFinished","inputArea","placeholder","autoComplete","onChange","e","htmlFor","faPencilAlt","homePageContent","faGlobeAmericas","faHourglassStart","faLaptopCode","faFilm","faBook","faVolleyballBall","faEgg","faBalanceScale","faBug","onSubmit","event","quizStartContent","ping","StyledQuizSummary","toggleStats","AnswerSummary","props","isCorrect","QuizSummary","score","questions","useState","setToggleStats","answeredQuestions","gameFinished","end","duration","prevState","faChevronDown","faSyncAlt","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","classNames","Fragment","faCheck","faTimes","StyledError","error","ErrorPage","App","setQuestions","setError","setCurrentQuestion","setScore","setIsFinished","setRemainedTime","inputValue","setInputValue","setName","setStoredName","setWrongAnswersDeleted","setHintCount","setCorrectAnswerSelected","setQuizStartCountDown","setCategory","setDifficulty","setSound","isSubmited","setIsSubmited","setIsTimeFinished","useEffect","apiKey","axios","get","then","response","handleQuestions","data","results","index","correctAnswer","correct_answer","incorrect_answers","answerIndex","Math","floor","random","splice","modifyedAnswers","catch","err","localStorage","getItem","questionId","answerId","playSound","cloneQuestions","cloneQuestion","updatedAnswers","cloneAnswers","wrongAnswers","filter","firstRemovedWrongAnswer","secondRemovedWrongAnswer","setTimeout","removedWrongAnswer","alert","target","value","preventDefault","trim","quizTimeinterval","setInterval","clearInterval","quizStartInterval","setItem","removeItem","categoryName","content","path","exact","render","Questions","to","isFinite","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.ec45b51e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/joker.9e2f8f34.wav\";","module.exports = __webpack_public_path__ + \"static/media/gameStarted.990c5d52.wav\";","module.exports = __webpack_public_path__ + \"static/media/coin.dc41d142.wav\";","module.exports = __webpack_public_path__ + \"static/media/gameFinished.e067672d.wav\";","module.exports = __webpack_public_path__ + \"static/media/404.64562e0c.jpg\";","import styled, { createGlobalStyle } from \"styled-components\"\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n  html {\n    box-sizing: border-box;\n    font-size: 62.5%;\n\n    @media (max-width: 55em){\n      font-size: 54%;\n    }\n    \n  }\n  body {\n    font-family: \"Rubik\", sans-serif;\n  }\n`\nconst StyledApp = styled.div`\n  max-width: 80rem;\n  margin: 0 auto;\n  min-height: 100vh;\n  background-image: linear-gradient(to right bottom, white, rgba(220, 221, 225, 1));\n  box-shadow: 0 1rem 2rem rgba(25, 42, 86, 1);\n`\n\nexport default StyledApp\n","import styled, { keyframes } from \"styled-components\"\n\nexport const Rotate = keyframes`\n  from{transform: rotate(0)}\n  to{ transform: rotate(360deg)}\n`\nconst StyledHeader = styled.header`\n  display: flex;\n  justify-content: center;\n  height: 12rem;\n  padding-top: 2.6rem;\n  margin-bottom: 2rem;\n  position: relative;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 300%;\n    background-color: rgba(25, 42, 86, 1);\n    border-radius: 34%;\n    transform: translateY(-70%);\n    box-shadow: 0 0.75rem 1.5rem rgba(25, 42, 86, 1);\n  }\n\n  & > svg {\n    color: #dfe6e9;\n    font-size: 4rem;\n    margin-right: 2rem;\n  }\n\n  & > svg:last-child {\n    font-size: 2rem;\n    font-weight: 300;\n    animation: ${Rotate} 6s infinite linear;\n  }\n\n  & > h1 {\n    font-size: 4rem;\n    color: #dfe6e9;\n    letter-spacing: 2px;\n    font-weight: 300;\n    margin-right: 0.4rem;\n  }\n\n  & > * {\n    z-index: 1;\n  }\n`\n\nexport default StyledHeader\n","import React from \"react\"\n\nimport { faAmericanSignLanguageInterpreting, faCrosshairs } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport StyledHeader from \"./StyledHeader\"\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <FontAwesomeIcon icon={faAmericanSignLanguageInterpreting} />\n      <h1>Trivia Db Quiz</h1>\n      <FontAwesomeIcon icon={faCrosshairs} />\n    </StyledHeader>\n  )\n}\n\nexport default Header\n","import styled, { keyframes } from \"styled-components\"\n\nconst StyledQuestions = styled.section`\n  padding: 0 3rem 0.1rem 3rem;\n  min-height: calc(100vh - 21vh);\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  margin: 0 auto;\n\n  .questionsHeader {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1.7rem;\n\n    @media (max-width: 43.75em) {\n      flex-wrap: wrap;\n    }\n\n    &::after {\n      content: \"\";\n      position: absolute;\n      display: block;\n      top: -1rem;\n      left: 0;\n      width: ${({ remainedTime }) => remainedTime && `${remainedTime}%`};\n      height: 5px;\n      background-color: ${({ remainedTime }) => (remainedTime > 15 ? \"rgba(47, 54, 64, 1)\" : \"rgba(194, 54, 22, 1)\")};\n      transition: all 0.2s;\n    }\n\n    .questionInformations {\n      font-size: 1.3rem;\n      letter-spacing: 0.5px;\n      width: 20rem;\n    }\n\n    .remainedTime {\n      font-size: 2.7rem;\n      transition: all 0.2s;\n      width: 5rem;\n      transform: ${({ remainedTime }) => (remainedTime > 15 ? \"none\" : \"scale(1.8) translateX(0.3rem)\")};\n      color: ${({ remainedTime }) => (remainedTime > 15 ? \"black\" : \"rgba(194, 54, 22,1.0)\")};\n    }\n\n    .questionJokers {\n      display: flex;\n\n      @media (max-width: 43.75em) {\n        width: 100%;\n        justify-content: center;\n        margin-top: 2rem;\n      }\n\n      & > button {\n        width: 8rem;\n        padding: 0.6rem 0;\n        border-radius: 5px;\n        margin: 0 0.3rem;\n        color: white;\n        background-color: rgba(194, 54, 22, 1);\n        border: none;\n        font-family: inherit;\n        cursor: pointer;\n        transition: all 0.1s;\n\n        &:hover {\n          transform: translateY(-1px);\n        }\n\n        &:active {\n          transform: translateY(-0.5px);\n        }\n        &:focus {\n          outline: none;\n        }\n        &:disabled {\n          opacity: 0.4;\n          transform: none;\n          cursor: not-allowed;\n        }\n        & > svg {\n          margin-right: 0.2rem;\n        }\n\n        @media (max-width: 43.75em) {\n          &:hover {\n            transform: none;\n          }\n        }\n\n        @media (hover: none) {\n          &:hover {\n            transform: none;\n          }\n        }\n      }\n\n      .hint {\n        position: relative;\n        text-align: left;\n        padding-left: 1rem;\n      }\n\n      .hintCount {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: absolute;\n        top: 0.3rem;\n        right: 0.3rem;\n        font-size: 1.2rem;\n        display: inline-block;\n        text-align: center;\n        width: 1.5rem;\n        height: 1.5rem;\n        border-radius: 50%;\n        color: rgba(194, 54, 22, 1);\n        background-color: rgba(251, 197, 49, 1);\n        font-weight: bold;\n      }\n    }\n  }\n\n  .questionContent {\n    position: relative;\n\n    .question {\n      font-size: 2.3rem;\n      font-weight: 500;\n      margin: 0.5rem 2rem;\n      min-height: 6rem;\n      z-index: 2;\n    }\n\n    &::before {\n      content: open-quote;\n      top: -3rem;\n      left: 2rem;\n      color: #192a56;\n      font-size: 17rem;\n      position: absolute;\n      font-family: sans-serif;\n      z-index: 1;\n      opacity: 0.1;\n    }\n  }\n\n  .questionButtons {\n    margin-top: auto;\n    display: flex;\n    justify-content: center;\n\n    & > button {\n      width: 19%;\n      padding: 0.8rem;\n      margin: 0.8rem;\n      font-size: 1.6rem;\n      font-family: inherit;\n      color: rgba(47, 54, 64, 1);\n      font-weight: bold;\n      background-color: rgba(251, 197, 49, 1);\n      border: 2px solid rgba(47, 54, 64, 1);\n      box-shadow: 0 0.75rem 1.5rem rgba(47, 54, 64, 1);\n      border-radius: 3px;\n      cursor: pointer;\n      transition: transform 0.2s, background-color 0.1s;\n\n      &:hover {\n        transform: translateY(-3px);\n        background-color: rgba(251, 197, 49, 0.8);\n      }\n\n      &:active {\n        transform: translateY(-1px);\n        box-shadow: 0 0.5rem 1rem rgba(47, 54, 64, 1);\n        background-color: rgba(251, 197, 49, 0.6);\n      }\n\n      &:focus {\n        outline: none;\n      }\n\n      &:disabled {\n        opacity: 0.5;\n        transform: none;\n        cursor: not-allowed;\n      }\n\n      @media (max-width: 43.75em) {\n        width: 28.5%;\n        &:hover {\n          transform: none;\n        }\n      }\n\n      @media (hover: none) {\n        &:hover {\n          transform: none;\n        }\n      }\n    }\n  }\n\n  .questionFooter {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 4rem;\n  }\n\n  .instructions {\n    text-align: left;\n    font-size: 0.9rem;\n  }\n\n  .currentQuestionNumber {\n    font-weight: bold;\n    font-size: 1.6rem;\n  }\n\n  .modal {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 5px;\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100vh;\n    width: 100%;\n    backdrop-filter: blur(2px) brightness(80%);\n    color: rgba(25, 42, 86, 1);\n    z-index: 5;\n\n    .modalContent {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex-direction: column;\n      height: 80vh;\n      width: 75%;\n      background-color: rgba(251, 197, 49, 1);\n    }\n\n    .modalTitle {\n      font-size: 4rem;\n    }\n\n    .modalFinishButton {\n      width: 40%;\n      padding: 0.8rem;\n      margin: 2rem 0.8rem;\n      font-size: 1.6rem;\n      font-family: inherit;\n      color: rgba(47, 54, 64, 1);\n      font-weight: bold;\n      background-color: rgba(251, 197, 49, 1);\n      border: 2px solid rgba(47, 54, 64, 1);\n      box-shadow: 0 0.75rem 1.5rem rgba(47, 54, 64, 1);\n      border-radius: 3px;\n      cursor: pointer;\n      transition: transform 0.2s, background-color 0.1s;\n\n      &:hover {\n        transform: translateY(-3px);\n        background-color: rgba(251, 197, 49, 0.8);\n      }\n\n      &:active {\n        transform: translateY(-1px);\n        box-shadow: 0 0.5rem 1rem rgba(47, 54, 64, 1);\n        background-color: rgba(251, 197, 49, 0.6);\n      }\n\n      &:focus {\n        outline: none;\n      }\n\n      @media (max-width: 43.75em) {\n        width: 70%;\n      }\n    }\n  }\n\n  .answerList {\n    width: 70%;\n    margin: 0 auto;\n    padding: 0 3rem;\n    overflow: hidden;\n\n    @media (max-width: 43.75em) {\n      width: 90%;\n      padding: 0 1rem;\n    }\n  }\n`\n\nexport const Answer1Animation = keyframes`\n  from {opacity:0.5; transform: translateX(-3rem)}\n  to {opacity: 1; transform: translateX(0);}\n`\nexport const Answer2Animation = keyframes`\n  from {opacity:0.5; transform: translateX(-6rem)}\n  to {opacity: 1; transform: translateX(0);}\n`\nexport const Answer3Animation = keyframes`\n  from {opacity:0.5; transform: translateX(-9rem)}\n  to {opacity: 1; transform: translateX(0);}\n`\nexport const Answer4Animation = keyframes`\n  from {opacity:0.5; transform: translateX(-12rem)}\n  to {opacity: 1; transform: translateX(0);}\n`\n\nexport const Answers = styled.li`\n  position: relative;\n  list-style-type: none;\n  font-size: 1.5rem;\n  color: ${({ isSelected }) => (isSelected ? \"white\" : \"rgba(25, 42, 86, 1)\")};\n  background-color: rgba(251, 197, 49, 1);\n  padding: 1.3rem 0;\n\n  margin: 1rem auto;\n  border-radius: 3px;\n  border: 1px solid rgba(25, 42, 86, 1);\n  cursor: pointer;\n  z-index: 1;\n  transition: all 0.6s;\n\n  &:nth-child(1) {\n    animation: ${Answer1Animation} 0.2s;\n  }\n  &:nth-child(2) {\n    animation: ${Answer2Animation} 0.4s;\n  }\n  &:nth-child(3) {\n    animation: ${Answer3Animation} 0.6s;\n  }\n  &:nth-child(4) {\n    animation: ${Answer4Animation} 0.8s;\n  }\n\n  &:hover {\n    color: white;\n  }\n\n  &::before {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: ${({ isSelected }) => (isSelected ? \"100%\" : \"0.5rem\")};\n    z-index: -1;\n    background-color: rgba(25, 42, 86, 1);\n    transform: ${({ isSelected }) => (isSelected ? \"scaleY(1)\" : \"scaleY(0)\")};\n    transition: transform 0.2s, width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s;\n  }\n\n  &:hover::before {\n    transform: scaleY(1);\n    width: 100%;\n  }\n`\nexport default StyledQuestions\n","import React from \"react\"\n\nimport StyledQuestions, { Answers } from \"./StyledQuestions\"\nimport { faPooStorm, faLightbulb, faClipboardCheck } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport jokerUsed from \"../../assets/sounds/joker.wav\"\nimport gameStarted from \"../../assets/sounds/gameStarted.wav\"\n\nconst Question = ({\n  ques,\n  nextQuestion,\n  prevQuestion,\n  selectAnswerHandler,\n  finishQuiz,\n  remainedTime,\n  deleteTwoWrongAnswersHandler,\n  wrongAnswersDeleted,\n  hintHandler,\n  hintCount,\n  correctAnswerHandler,\n  correctAnswerSelected,\n  sound,\n  history,\n  currentQuestion,\n  isTimeFinished\n}) => {\n  if (window.performance) {\n    if (performance.navigation.type === 1) {\n      history.push(\"/\")\n      window.location.reload()\n    }\n  }\n  return (\n    <StyledQuestions remainedTime={remainedTime * 1.666666666} ques={ques}>\n      <audio autoPlay src={gameStarted}></audio>\n      {sound && remainedTime <= 59 && <audio autoPlay src={jokerUsed}></audio>}\n      {isTimeFinished && (\n        <div className='modal'>\n          <div className='modalContent'>\n            <h1 className='modalTitle'>Time Finished!</h1>\n            <button className='modalFinishButton' onClick={() => finishQuiz(history)}>\n              See Your Result\n            </button>\n          </div>\n        </div>\n      )}\n      <div className='questionsHeader'>\n        <div className='remainedTime'>{remainedTime}</div>\n        <div className='questionInformations'>\n          <div className='questionCategory'>Category: {ques.category.includes(\":\") ? ques.category.split(\":\")[1] : ques.category}</div>\n          <div className='questionsDifficulty'>Difficulty: {ques.difficulty.toUpperCase().slice(0, 1) + ques.difficulty.slice(1)}</div>\n        </div>\n        <div className='questionJokers'>\n          <button className='fiftyfifty' onClick={() => deleteTwoWrongAnswersHandler(ques.id)} disabled={ques.answers.length < 2 || wrongAnswersDeleted}>\n            <FontAwesomeIcon icon={faPooStorm} /> Two\n          </button>\n          <button className='hint' onClick={() => hintHandler(ques.id)} disabled={ques.answers.length < 2 || hintCount < 1}>\n            <FontAwesomeIcon icon={faLightbulb} /> Hint <span className='hintCount'>{hintCount}</span>\n          </button>\n          <button className='selectCorrectAnswer' onClick={() => correctAnswerHandler(ques.id)} disabled={correctAnswerSelected}>\n            <FontAwesomeIcon icon={faClipboardCheck} /> Correct\n          </button>\n        </div>\n      </div>\n\n      <div className='questionContent'>\n        <div className='question'>\n          {ques.question\n            .replace(/&amp;/g, \"&\")\n            .replace(/&#039;/g, \"'\")\n            .replace(/&shy;/g, \" \")\n            .replace(/&quot;/g, '\"')}\n        </div>\n        <div className='answers'>\n          <ul className='answerList'>\n            {ques.answers.map(ans => (\n              <Answers className='answer' key={ans.answer} isSelected={ans.isSelected} onClick={() => selectAnswerHandler(ques.id, ans.id)}>\n                {ans.answer\n                  .replace(/&amp;/g, \"&\")\n                  .replace(/&#039;/g, \"'\")\n                  .replace(/&shy;/g, \" \")\n                  .replace(/&quot;/g, '\"')}\n              </Answers>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      <div className='questionButtons'>\n        <button onClick={prevQuestion} disabled={currentQuestion === 0}>\n          Previous\n        </button>\n        <button onClick={nextQuestion} disabled={currentQuestion === 9}>\n          Next\n        </button>\n        <button onClick={() => finishQuiz(history)}>Finish</button>\n      </div>\n      <div className='questionFooter'>\n        <div className='instructions'>\n          <p>*'Two' button removes 2 wrong answers. You have one chance.</p>\n          <p>*'Hint' button removes 1 wrong answer. You have three chances.</p>\n          <p>*'Correct' button selects correct answer. you have one chance.</p>\n        </div>\n        <div className='currentQuestionNumber'>{currentQuestion + 1}/10</div>\n      </div>\n    </StyledQuestions>\n  )\n}\n\nexport default Question\n","import styled, { keyframes, css } from \"styled-components\"\n\nconst StyledHomePage = styled.main`\n  color: red;\n\n  .optionHeader {\n    font-size: 1.8rem;\n    color: rgba(53, 59, 72, 1);\n    width: 95%;\n    text-align: center;\n    border-bottom: 2px solid rgba(53, 59, 72, 1);\n    line-height: 0.1rem;\n    margin: 2rem auto;\n\n    & > span {\n      background: white;\n      padding: 0 1rem;\n      border: 2px solid rgba(53, 59, 72, 1);\n    }\n  }\n\n  & > div {\n    text-align: center;\n  }\n\n  & > div > button {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n    width: 25%;\n    padding: 1rem 0;\n    margin: 1rem;\n    border: 1px solid rgba(39, 60, 117, 1);\n    box-shadow: 0 0.6rem 1.2rem rgba(39, 60, 117, 0.6);\n    font-family: \"Fredoka One\", cursive;\n    font-size: 1.3rem;\n    letter-spacing: 2px;\n    text-transform: uppercase;\n    font-weight: 400;\n    cursor: pointer;\n    transition: all 0.3s linear;\n\n    &:hover {\n      color: white;\n      background-color: rgba(39, 60, 117, 1);\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    & > svg {\n      font-size: 3.2rem;\n      margin-bottom: 1.4rem;\n    }\n  }\n\n  .userInformation {\n    display: inline-block;\n    width: 60%;\n    height: 5rem;\n    text-align: left;\n    padding: 1.3rem;\n    color: black;\n    background-color: white;\n    letter-spacing: 1px;\n    box-shadow: 0 0.4rem 0.8rem rgba(53, 59, 72, 0.4);\n    font-size: 1.9rem;\n    font-weight: bold;\n\n    & > svg {\n      color: rgba(39, 60, 117, 1);\n      margin-right: 1rem;\n      cursor: pointer;\n    }\n  }\n\n  .inputForm {\n    text-align: center;\n    padding: 3rem;\n    position: relative;\n  }\n\n  .input {\n    width: 60%;\n    display: inline-block;\n    height: 5rem;\n    padding: 1.3rem;\n    margin-left: 2rem;\n    border: none;\n    box-shadow: 0 0.4rem 0.8rem rgba(53, 59, 72, 0.3);\n    font-family: inherit;\n    font-size: 1.6rem;\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .input:placeholder-shown + .inputLabel {\n    top: 43%;\n    visibility: hidden;\n    opacity: 0;\n  }\n\n  .inputLabel {\n    position: absolute;\n    top: 10%;\n    left: 17%;\n    font-size: 1.6rem;\n    color: black;\n    visibility: visible;\n    opacity: 1;\n    transition: all 0.2s;\n\n    @media (max-width: 38em) {\n      left: 16%;\n    }\n  }\n\n  .inputButton {\n    height: 5.1rem;\n    border: none;\n    color: white;\n    background-color: rgba(39, 60, 117, 1);\n    clip-path: polygon(100% 0, 100% 38%, 100% 150%, 0 100%, 26% 0);\n    box-shadow: 0 0.4rem 0.8rem rgba(53, 59, 72, 0.3);\n    padding: 1.3rem 2rem 1.3rem 4rem;\n    transform: translateX(-4rem);\n    letter-spacing: 2px;\n    font-size: 1.7rem;\n    font-family: inherit;\n    cursor: pointer;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:active {\n      background-color: rgba(194, 54, 22, 1);\n    }\n  }\n\n  .quizStartContent {\n    height: 60vh;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    color: rgba(25, 42, 86, 1);\n    font-size: 2.5rem;\n\n    .quizStartCountDown {\n      font-size: 20rem;\n      font-weight: bold;\n      margin-top: 2rem;\n    }\n    .quizStartReady {\n      font-size: 5rem;\n      font-weight: bold;\n      margin-top: 8rem;\n    }\n  }\n`\n\nexport const SelectAnimation = keyframes`\n  0% {transform: scale(1)}\n  45% {transform: scale(1.15)}\n  100% {transform: scale(1.075)}\n`\n\nexport const CategorySelect = styled.button`\n  color: ${({ category, categoryNum }) => (category === categoryNum ? \"white\" : \"rgba(25, 42, 86, 1)\")};\n  background-color: ${({ category, categoryNum }) => (category === categoryNum ? \"rgba(39, 60, 117,1.0)\" : \"rgba(251, 197, 49,1.0)\")};\n  animation: ${({ category, categoryNum }) =>\n    category === categoryNum &&\n    css`\n      ${SelectAnimation} .3s linear\n    `};\n  animation-fill-mode: forwards;\n`\n\nexport const DifficultySelect = styled.button`\n  color: ${({ difficulty, difficultyLevel }) => (difficulty === difficultyLevel ? \"white\" : \"rgba(25, 42, 86, 1)\")};\n  background-color: ${({ difficulty, difficultyLevel }) => (difficulty === difficultyLevel ? \"rgba(39, 60, 117,1.0)\" : \"rgba(251, 197, 49,1.0)\")};\n  animation: ${({ difficulty, difficultyLevel }) =>\n    difficulty === difficultyLevel &&\n    css`\n      ${SelectAnimation} .3s linear\n    `};\n  animation-fill-mode: forwards;\n`\n\nexport default StyledHomePage\n","import React from \"react\"\n\nimport { faBook, faGlobeAmericas, faHourglassStart, faLaptopCode, faFilm, faVolleyballBall, faBug, faEgg, faBalanceScale, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport StyledHomePage, { CategorySelect, DifficultySelect } from \"./StyledHomePage\"\n\nimport ping from \"../../assets/sounds/coin.wav\"\n\nconst HomePage = ({\n  inputSubmitHandler,\n  inputChangeHandler,\n  history,\n  name,\n  quizStartCountDown,\n  categorySelectHandler,\n  difficultySelectHandler,\n  category,\n  difficulty,\n  storedName,\n  renameHandler,\n  sound,\n  isFinished\n}) => {\n  let inputArea = (\n    <div className='inputForm'>\n      <input id='name' className='input' type='text' placeholder='Name' autoComplete='off' onChange={e => inputChangeHandler(e)} />\n      <label htmlFor='name' className='inputLabel'>\n        Name\n      </label>\n      <button className='inputButton'>START</button>\n    </div>\n  )\n  if (storedName) {\n    inputArea = (\n      <div className='inputForm'>\n        <span className='userInformation'>\n          <FontAwesomeIcon icon={faPencilAlt} onClick={renameHandler} />\n          {storedName}\n        </span>\n        <button className='inputButton'>START</button>\n      </div>\n    )\n  }\n\n  let homePageContent = null\n  if (quizStartCountDown >= 5 && isFinished === false) {\n    homePageContent = (\n      <>\n        <h2 className='optionHeader'>\n          <span>CATEGORIES</span>\n        </h2>\n        <div className='CategorySelect'>\n          <CategorySelect category={category} categoryNum={9} onClick={() => categorySelectHandler(9)}>\n            <FontAwesomeIcon icon={faGlobeAmericas} /> General\n          </CategorySelect>\n          <CategorySelect category={category} categoryNum={23} onClick={() => categorySelectHandler(23)}>\n            <FontAwesomeIcon icon={faHourglassStart} /> History\n          </CategorySelect>\n          <CategorySelect category={category} categoryNum={18} onClick={() => categorySelectHandler(18)}>\n            <FontAwesomeIcon icon={faLaptopCode} /> Computer\n          </CategorySelect>\n          <CategorySelect category={category} categoryNum={11} onClick={() => categorySelectHandler(11)}>\n            <FontAwesomeIcon icon={faFilm} /> Film\n          </CategorySelect>\n          <CategorySelect category={category} categoryNum={10} onClick={() => categorySelectHandler(10)}>\n            <FontAwesomeIcon icon={faBook} /> Books\n          </CategorySelect>\n          <CategorySelect category={category} categoryNum={21} onClick={() => categorySelectHandler(21)}>\n            <FontAwesomeIcon icon={faVolleyballBall} /> Sports\n          </CategorySelect>\n        </div>\n        <h2 className='optionHeader'>\n          <span>DIFFICULTY</span>\n        </h2>\n        <div className='difficultySelect'>\n          <DifficultySelect difficulty={difficulty} difficultyLevel={\"easy\"} onClick={() => difficultySelectHandler(\"easy\")}>\n            <FontAwesomeIcon icon={faEgg} /> Easy\n          </DifficultySelect>\n          <DifficultySelect difficulty={difficulty} difficultyLevel={\"medium\"} onClick={() => difficultySelectHandler(\"medium\")}>\n            <FontAwesomeIcon icon={faBalanceScale} /> Medium\n          </DifficultySelect>\n          <DifficultySelect difficulty={difficulty} difficultyLevel={\"hard\"} onClick={() => difficultySelectHandler(\"hard\")}>\n            <FontAwesomeIcon icon={faBug} /> Hard\n          </DifficultySelect>\n        </div>\n        <form onSubmit={event => inputSubmitHandler(event, history)}>{inputArea}</form>\n      </>\n    )\n  }\n\n  let quizStartContent = null\n  if (quizStartCountDown < 5 && isFinished === false) {\n    quizStartContent = (\n      <div className='quizStartContent'>\n        {sound && quizStartCountDown >= -1 && <audio autoPlay src={ping}></audio>}\n        <h1 className='quizStartHeader'>Good Luck {storedName ? storedName : name}!</h1>\n        <p className='quizStartCountDown'>{quizStartCountDown >= 0 && quizStartCountDown}</p>\n        <p className='quizStartReady'>{quizStartCountDown < 0 && \"Ready!\"}</p>\n      </div>\n    )\n  }\n\n  return (\n    <StyledHomePage>\n      {homePageContent}\n      {quizStartContent}\n    </StyledHomePage>\n  )\n}\n\nexport default HomePage\n","import styled from \"styled-components\"\n\nconst StyledQuizSummary = styled.section`\n  .score {\n    text-align: center;\n\n    font-size: 20rem;\n    color: rgba(194, 54, 22, 1);\n\n    & > span:not(:first-child) {\n      font-size: 2rem;\n      margin-left: -5rem;\n    }\n  }\n  .summaryButtons {\n    text-align: center;\n\n    .summaryButton {\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      padding: 1rem 1rem;\n      width: 15rem;\n      font-family: inherit;\n      font-size: 1.6rem;\n      letter-spacing: 1px;\n      margin: 0 1rem;\n      color: white;\n      background-color: rgba(25, 42, 86, 1);\n      border: none;\n      box-shadow: 0 0.5rem 1rem rgba(25, 42, 86, 1);\n      border-radius: 4px;\n      cursor: pointer;\n      transition: all 0.2s;\n\n      &:hover {\n        opacity: 0.9;\n      }\n\n      &:active {\n        opacity: 0.8;\n      }\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    .summaryIcons {\n      margin-right: 1rem;\n      font-size: 2rem;\n      transition: all 0.6s;\n    }\n\n    .summaryChavronDown {\n      transform: ${({ toggleStats }) => (toggleStats ? \"rotate(180deg)\" : \"rotate(0)\")};\n    }\n  }\n  .summarySyncAltButton:hover .summarySyncAlt {\n    transform: rotate(360deg);\n  }\n\n  .questionsSumamry {\n    text-align: left;\n    padding: 2rem;\n    backface-visibility: hidden;\n  }\n\n  .questionsSummary-fade-enter-active {\n    opacity: 0;\n    transform: scale(0.9);\n  }\n  .questionsSummary-fade-enter-done {\n    opacity: 1;\n    transform: translateX(0);\n    transition: all 0.3s;\n  }\n  .questionsSummary-fade-exit-active {\n    opacity: 0;\n    transform: scale(0.9);\n    transition: all 0.3s;\n  }\n\n  .questionSummary {\n    font-size: 1.8rem;\n    font-weight: 500;\n    padding-top: 0.6rem;\n    border-top: 2px solid rgba(25, 42, 86, 1);\n    &:not(:first-child) {\n      margin-bottom: 1rem;\n    }\n  }\n\n  .questionSummaryHeader {\n    font-size: 2rem;\n  }\n\n  .stats {\n    width: 24rem;\n    font-size: 1.6rem;\n    margin: 1rem auto;\n\n    & > p {\n      display: flex;\n      justify-content: space-between;\n      padding: 0 2rem;\n      border-bottom: 1px solid rgba(47, 54, 64, 0.5);\n    }\n  }\n`\nexport const AnswerSummary = styled.li`\n  display: flex;\n  justify-content: space-between;\n  list-style: none;\n  font-size: 1.6rem;\n  margin-left: 0.3rem;\n  padding: 0.7rem 1rem;\n  width: 40rem;\n  background-color: ${props => (props.ans.isSelected ? (props.ans.isCorrect ? \"rgba(251, 197, 49,1.0)\" : \"rgba(194, 54, 22,1.0)\") : props.ans.isCorrect && \"rgba(25, 42, 86,1.0)\")};\n  color: ${props => (props.ans.isSelected ? (props.ans.isCorrect ? \"black\" : \"white\") : props.ans.isCorrect && \"white\")};\n\n  &:last-child {\n    margin-bottom: 1rem;\n  }\n`\n\nexport default StyledQuizSummary\n","import React, { useState } from \"react\"\nimport { CSSTransition } from \"react-transition-group\"\nimport CountUp from \"react-countup\"\nimport StyledQuizSummary, { AnswerSummary } from \"./StyledQuizSummary\"\n\nimport { faSyncAlt, faChevronDown, faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport gameFinished from \"../../assets/sounds/gameFinished.wav\"\n\nconst QuizSummary = ({ history, isFinished, score, questions, wrongAnswersDeleted, correctAnswerSelected, hintCount }) => {\n  const [toggleStats, setToggleStats] = useState(false)\n\n  if (window.performance) {\n    if (performance.navigation.type === 1) {\n      history.push(\"/\")\n      window.location.reload()\n    }\n  }\n\n  let answeredQuestions = null\n  const answerChecker = [...questions].map(ques => ques.answers.map(ans => ans.isSelected && answeredQuestions++))\n\n  const toggleStatsHandler = () => {\n    setToggleStats(prevState => !prevState)\n  }\n\n  const homePagePushHandler = () => {\n    history.push(\"/\")\n    window.location.reload()\n  }\n\n  return (\n    <StyledQuizSummary toggleStats={toggleStats}>\n      <audio autoPlay src={gameFinished}></audio>\n      <h1 className='score'>\n        {isFinished && <CountUp end={score} duration={4} />} <span>/100</span>\n      </h1>\n\n      <div className='summaryButtons'>\n        <button className='summaryButton summaryChavronDownButton' onClick={toggleStatsHandler}>\n          <FontAwesomeIcon className='summaryIcons summaryChavronDown' icon={faChevronDown} /> Stats\n        </button>\n        <button className='summaryButton summarySyncAltButton' onClick={homePagePushHandler}>\n          <FontAwesomeIcon className='summaryIcons summarySyncAlt' icon={faSyncAlt} /> Play Again\n        </button>\n      </div>\n      <CSSTransition in={toggleStats} timeout={300} mountOnEnter unmountOnExit classNames='questionsSummary-fade'>\n        <div className='questionsSumamry'>\n          <div className='stats'>\n            <p>\n              <span>Correct Answer:</span> <span>{score / 10}</span>\n            </p>\n            <p>\n              <span>Wrong Answer:</span> <span>{10 - score / 10 - (10 - answeredQuestions)}</span>\n            </p>\n            <p>\n              <span>Unanswered Questions:</span> <span>{10 - answeredQuestions}</span>\n            </p>\n            <p>\n              <span>'Two' Lifeline:</span> <span>{wrongAnswersDeleted ? \"1\" : \"-\"}</span>\n            </p>\n            <p>\n              <span>Hint Lifeline:</span> <span>{3 - hintCount === 0 ? \"-\" : 3 - hintCount}</span>\n            </p>\n            <p>\n              <span>Correct Answer Lifeline:</span> <span>{correctAnswerSelected ? \"1\" : \"-\"}</span>\n            </p>\n          </div>\n          <h1 className='questionSummaryHeader'>Questions</h1>\n          {questions.map(ques => (\n            <React.Fragment key={ques.id}>\n              <h3 className='questionSummary'>\n                {ques.id + 1}-){\" \"}\n                {ques.question\n                  .replace(/&amp;/g, \"&\")\n                  .replace(/&#039;/g, \"'\")\n                  .replace(/&shy;/g, \" \")\n                  .replace(/&quot;/g, '\"')}\n              </h3>\n              <ul>\n                {ques.answers.map(\n                  ans =>\n                    (ans.isSelected || ans.isCorrect) && (\n                      <AnswerSummary ans={ans} key={ans.answer}>\n                        {ans.answer\n                          .replace(/&amp;/g, \"&\")\n                          .replace(/&#039;/g, \"'\")\n                          .replace(/&shy;/g, \" \")\n                          .replace(/&quot;/g, '\"')}\n                        {ans.isSelected ? ans.isCorrect ? <FontAwesomeIcon icon={faCheck} /> : <FontAwesomeIcon icon={faTimes} /> : ans.isCorrect && <FontAwesomeIcon icon={faCheck} />}\n                      </AnswerSummary>\n                    )\n                )}\n              </ul>\n            </React.Fragment>\n          ))}\n        </div>\n      </CSSTransition>\n    </StyledQuizSummary>\n  )\n}\n\nexport default QuizSummary\n","import styled from \"styled-components\"\nimport error from \"../../../assets/Images/404.jpg\"\n\nconst StyledError = styled.div`\n  width: 90%;\n  min-height: 90vh;\n  margin: -3rem auto;\n  background-color: rgba(245, 246, 250, 1);\n\n  .errorContent {\n    padding: 2rem 0;\n    margin-left: 2rem;\n    .errorCode {\n      font-size: 4rem;\n      color: #939393;\n      font-weight: bold;\n    }\n\n    & > h1 {\n      font-size: 3rem;\n      margin: 2rem 0;\n    }\n\n    & > h2 {\n      font-weight: 400;\n      font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n    }\n  }\n  .errorImage {\n    background-image: url(${error});\n    background-size: cover;\n    background-position: top;\n    width: 100%;\n    min-height: 90vh;\n  }\n`\nexport default StyledError\n","import React from \"react\"\nimport StyledError from \"./StyledError\"\n\nconst ErrorPage = () => {\n  return (\n    <StyledError>\n      <div className='errorContent'>\n        <div className='errorCode'>404 Error</div>\n        <h1>Sorry, we can’t seem to find what you’re looking for.</h1>\n        <h2>You've landed on a URL that doesn't seem to exist on Trivia Db Quiz. Here's some options:</h2>\n        <h2>You could try a search up in the header, that should turn up whatever you were looking for.</h2>\n      </div>\n      <div className='errorImage'></div>\n    </StyledError>\n  )\n}\n\nexport default ErrorPage\n","import React, { useState, useEffect } from \"react\"\n\nimport { Route, Switch } from \"react-router-dom\"\nimport StyledApp, { GlobalStyle } from \"./StyledApp\"\n\nimport Header from \"./components/Header/Header\"\nimport Questions from \"./components/Questions/Questions\"\nimport HomePage from \"./components/HomePage/HomePage\"\nimport QuizSummary from \"./components/QuizSummary/QuizSummary\"\nimport ErrorPage from \"./components/UI/ErrorPage/ErrorPage\"\n\nimport axios from \"axios\"\n\nconst App = () => {\n  const [questions, setQuestions] = useState([])\n  const [error, setError] = useState(false)\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [score, setScore] = useState(0)\n  const [isFinished, setIsFinished] = useState(false)\n  const [remainedTime, setRemainedTime] = useState(67)\n  const [inputValue, setInputValue] = useState(\"\")\n  const [name, setName] = useState(null)\n  const [storedName, setStoredName] = useState(null)\n  const [wrongAnswersDeleted, setWrongAnswersDeleted] = useState(false)\n  const [hintCount, setHintCount] = useState(3)\n  const [correctAnswerSelected, setCorrectAnswerSelected] = useState(false)\n  const [quizStartCountDown, setQuizStartCountDown] = useState(5)\n  const [category, setCategory] = useState(null)\n  const [difficulty, setDifficulty] = useState(null)\n  const [sound, setSound] = useState(false)\n  const [isSubmited, setIsSubmited] = useState(false)\n  const [isTimeFinished, setIsTimeFinished] = useState(false)\n\n  useEffect(() => {\n    let apiKey = \"https://opentdb.com/api.php?amount=10&type=multiple\"\n    if (difficulty) apiKey = `https://opentdb.com/api.php?amount=10&difficulty=${difficulty}&type=multiple`\n    if (category) apiKey = `https://opentdb.com/api.php?amount=10&category=${category}&type=multiple`\n    if (category && difficulty) apiKey = `https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${difficulty}&type=multiple`\n    axios\n      .get(apiKey)\n      .then(response => {\n        const handleQuestions = response.data.results.map((ques, index) => {\n          const correctAnswer = ques.correct_answer\n          const answers = ques.incorrect_answers\n          const answerIndex = Math.floor(Math.random() * 4)\n          answers.splice(answerIndex, 0, correctAnswer)\n          const modifyedAnswers = answers.map((ans, index) => {\n            if (ans === ques.correct_answer) {\n              return { id: index, answer: ans, isSelected: false, isCorrect: true }\n            } else {\n              return { id: index, answer: ans, isSelected: false, isCorrect: false }\n            }\n          })\n          return {\n            id: index,\n            question: ques.question,\n            answers: modifyedAnswers,\n            difficulty: ques.difficulty,\n            category: ques.category\n          }\n        })\n        setQuestions(handleQuestions)\n      })\n      .catch(err => {\n        setError(true)\n      })\n  }, [category, difficulty])\n\n  useEffect(() => {\n    if (window.localStorage.getItem(\"name\")) {\n      setStoredName(window.localStorage.getItem(\"name\"))\n    }\n  }, [storedName])\n\n  const selectAnswerHandler = (questionId, answerId) => {\n    playSound(800)\n    const cloneQuestions = [...questions]\n    const cloneQuestion = cloneQuestions[questionId]\n    const cloneAnswers = [...cloneQuestion.answers]\n\n    const updatedAnswers = cloneAnswers.map(ans => {\n      if (answerId === ans.id) {\n        return { ...ans, isSelected: true }\n      } else {\n        return { ...ans, isSelected: false }\n      }\n    })\n\n    cloneQuestion.answers = updatedAnswers\n    cloneQuestions[questionId] = cloneQuestion\n    setQuestions(cloneQuestions)\n  }\n\n  const deleteTwoWrongAnswersHandler = questionId => {\n    const cloneQuestions = [...questions]\n    const cloneQuestion = cloneQuestions[questionId]\n    const cloneAnswers = [...cloneQuestion.answers]\n    const wrongAnswers = cloneAnswers.filter(ans => ans.isCorrect !== true)\n    if (wrongAnswers.length === 3) {\n      const firstRemovedWrongAnswer = wrongAnswers.splice(Math.floor(Math.random() * 2), 1)\n      const secondRemovedWrongAnswer = wrongAnswers.splice(Math.floor(Math.random() * 1), 1)\n      const updatedAnswers = cloneAnswers.filter(ans => ans.id !== firstRemovedWrongAnswer[0].id && ans.id !== secondRemovedWrongAnswer[0].id)\n      cloneQuestion.answers = updatedAnswers\n      cloneQuestions[questionId] = cloneQuestion\n      setQuestions(cloneQuestions)\n    } else {\n      const updatedAnswers = cloneAnswers\n        .filter(ans => ans.isCorrect === true)\n        .map(ans => {\n          return { ...ans, isSelected: true }\n        })\n\n      cloneQuestion.answers = updatedAnswers\n      cloneQuestions[questionId] = cloneQuestion\n      setQuestions(cloneQuestions)\n    }\n    setWrongAnswersDeleted(true)\n    playSound(800)\n  }\n\n  const playSound = duration => {\n    setSound(true)\n    setTimeout(() => {\n      setSound(false)\n    }, duration)\n  }\n\n  const hintHandler = questionId => {\n    const cloneQuestions = [...questions]\n    const cloneQuestion = cloneQuestions[questionId]\n    const cloneAnswers = [...cloneQuestion.answers]\n    const wrongAnswers = cloneAnswers.filter(ans => ans.isCorrect !== true)\n    const removedWrongAnswer = wrongAnswers.splice(Math.floor(Math.random() * cloneAnswers.length - 1), 1)\n    let updatedAnswers = cloneAnswers.filter(ans => ans.id !== removedWrongAnswer[0].id)\n    if (updatedAnswers.length === 1) {\n      updatedAnswers = updatedAnswers.map(ans => {\n        return { ...ans, isSelected: true }\n      })\n    }\n    cloneQuestion.answers = updatedAnswers\n    cloneQuestions[questionId] = cloneQuestion\n    setQuestions(cloneQuestions)\n    setHintCount(prevState => prevState - 1)\n    playSound(800)\n  }\n\n  const correctAnswerHandler = questionId => {\n    const cloneQuestions = [...questions]\n    const cloneQuestion = cloneQuestions[questionId]\n    const cloneAnswers = [...cloneQuestion.answers]\n    if (cloneAnswers.length > 1) {\n      const updatedAnswers = cloneAnswers.map(ans => {\n        if (ans.isCorrect === true) {\n          return { ...ans, isSelected: true }\n        } else {\n          return { ...ans, isSelected: false }\n        }\n      })\n      cloneQuestion.answers = updatedAnswers\n      cloneQuestions[questionId] = cloneQuestion\n      setQuestions(cloneQuestions)\n      setCorrectAnswerSelected(true)\n    } else {\n      alert(\"There is just one option\")\n    }\n    playSound(800)\n  }\n\n  const nextQuestion = () => {\n    if (currentQuestion < 9) setCurrentQuestion(prevState => prevState + 1)\n  }\n\n  const prevQuestion = () => {\n    if (currentQuestion > 0) setCurrentQuestion(prevState => prevState - 1)\n  }\n\n  const finishQuiz = history => {\n    setIsFinished(true)\n    playSound(8000)\n    history.push(\"/quiz-summary\")\n\n    return !isFinished && questions.map(ques => ques.answers.map(ans => (ans.isCorrect === true && ans.isSelected === true ? setScore(prevState => (prevState += 10)) : null)))\n  }\n\n  const inputChangeHandler = event => setInputValue(event.target.value)\n\n  const inputSubmitHandler = (event, history) => {\n    event.preventDefault()\n\n    if (isSubmited === false) {\n      if (inputValue.trim() !== \"\" || storedName) {\n        setName(inputValue)\n        const quizTimeinterval = setInterval(() => {\n          setRemainedTime(prevState => prevState - 1)\n        }, 1000)\n\n        setTimeout(() => {\n          clearInterval(quizTimeinterval)\n          setIsTimeFinished(true)\n        }, 67000)\n\n        const quizStartInterval = setInterval(() => {\n          setQuizStartCountDown(prevState => prevState - 1)\n          playSound(800)\n        }, 1000)\n\n        setTimeout(() => {\n          history.push(\"/questions\")\n          clearInterval(quizStartInterval)\n        }, 7000)\n        if (!storedName) {\n          window.localStorage.setItem(\"name\", inputValue)\n          setStoredName(window.localStorage.getItem(\"name\"))\n        }\n        setIsSubmited(true)\n      } else {\n        alert(\"please enter valid name\")\n      }\n    }\n  }\n\n  const categorySelectHandler = category => {\n    setCategory(category)\n  }\n\n  const difficultySelectHandler = difficulty => {\n    setDifficulty(difficulty)\n  }\n\n  const renameHandler = () => {\n    window.localStorage.removeItem(\"name\")\n    setStoredName(null)\n  }\n\n  let categoryName = null\n  if (category === 9) categoryName = \"General\"\n  else if (category === 21) categoryName = \"Sports\"\n  else if (category === 10) categoryName = \"Books\"\n  else if (category === 11) categoryName = \"Film\"\n  else if (category === 18) categoryName = \"Computer Science\"\n  else if (category === 23) categoryName = \"History\"\n  else categoryName = \"Any Category\"\n\n  let content = (\n    <Switch>\n      <Route\n        path='/'\n        exact\n        render={({ history }) => (\n          <HomePage\n            inputSubmitHandler={inputSubmitHandler}\n            inputChangeHandler={inputChangeHandler}\n            history={history}\n            name={name}\n            quizStartCountDown={quizStartCountDown}\n            categorySelectHandler={categorySelectHandler}\n            difficultySelectHandler={difficultySelectHandler}\n            category={category}\n            difficulty={difficulty}\n            storedName={storedName}\n            renameHandler={renameHandler}\n            categoryName={categoryName}\n            sound={sound}\n            isFinished={isFinished}\n          />\n        )}\n      />\n\n      <Route\n        path='/questions'\n        render={({ history }) => (\n          <Questions\n            ques={questions[currentQuestion]}\n            nextQuestion={nextQuestion}\n            prevQuestion={prevQuestion}\n            finishQuiz={finishQuiz}\n            isFinished={isFinished}\n            selectAnswerHandler={selectAnswerHandler}\n            remainedTime={remainedTime}\n            name={name}\n            history={history}\n            deleteTwoWrongAnswersHandler={deleteTwoWrongAnswersHandler}\n            wrongAnswersDeleted={wrongAnswersDeleted}\n            hintHandler={hintHandler}\n            hintCount={hintCount}\n            correctAnswerHandler={correctAnswerHandler}\n            correctAnswerSelected={correctAnswerSelected}\n            categoryName={categoryName}\n            difficulty={difficulty}\n            sound={sound}\n            currentQuestion={currentQuestion}\n            isTimeFinished={isTimeFinished}\n          />\n        )}\n      />\n\n      <Route\n        to='/quiz-summary'\n        render={({ history }) => (\n          <QuizSummary\n            history={history}\n            isFinished={isFinite}\n            score={score}\n            questions={questions}\n            hintCount={hintCount}\n            wrongAnswersDeleted={wrongAnswersDeleted}\n            correctAnswerSelected={correctAnswerSelected}\n            isSubmited={isSubmited}\n          />\n        )}\n      />\n    </Switch>\n  )\n\n  if (error) content = <ErrorPage />\n\n  return (\n    <StyledApp>\n      <GlobalStyle />\n      <Header />\n      {content}\n    </StyledApp>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter, HashRouter } from \"react-router-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <BrowserRouter>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}